{"version":3,"sources":["components/CryptoTable/CryptoItem.tsx","redux/actions/converterAction.ts","tableLogo.svg","redux/actions/coinAction.ts","components/CryptoTable/CryptoTable.tsx","components/ConverterBlock/ConverterBlock.tsx","App.tsx","redux/reducers/coinReducer.ts","redux/reducers/converterReducer.ts","redux/reducers/calculateReducer.ts","redux/reducers/index.ts","redux/store.js","index.tsx"],"names":["CryptoItem","name","fullName","price","volume","imageUrl","diffObj","useSelector","coinReducer","dispatch","useDispatch","onClick","type","payload","getCoinName","onClickRow","className","src","alt","fetchCoins","axios","get","then","coins","data","Data","map","coin","CoinInfo","Name","FullName","ImageUrl","RAW","USD","PRICE","toFixed","parseInt","VOLUME24HOUR","setCoins","items","CryptoTable","React","useEffect","setInterval","tableLogo","length","connect","state","converterReducer","props","useState","value","setValue","outval","setOutVal","converterValue","setConverterValue","calculate","val1","val2","placeholder","onChange","e","test","target","readOnly","item","App","initialState","diffCurrencies","arr1","arr2","filter","obj","index","action","reduce","initObj","newObj","find","o","oldObj","itemObj","color","console","log","coinName","value1","value2","inPrice","outPrice","String","Number","in","out","rootReducer","combineReducers","calculateReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7861466.chunk.js","sourcesContent":["import { Tcoin,TCoinDiff } from '../../types'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { getCoinName } from '../../redux/actions/converterAction'\r\n\r\n\r\nfunction CryptoItem({name,fullName,price,volume,imageUrl}:Tcoin) {\r\n  const diffObj : TCoinDiff = useSelector(({ coinReducer }:any) => coinReducer.diffObj)\r\n  const dispatch = useDispatch()\r\n\r\n  const onClickRow  = (name: string, price: number):void => {\r\n    dispatch(getCoinName(name, price))\r\n  }\r\n\r\n  return (\r\n    <li onClick={() => onClickRow(name,price)} className=\"crypto-item\">\r\n      <img src={imageUrl} className=\"crypto-img\" alt=\"coin icon\"/>\r\n      <p className=\"crypto-name\">{name}</p>\r\n      <p className=\"crypto-fullname\">{fullName}</p>\r\n      <p className={diffObj[name] && `price${diffObj[name]}`}>${price}</p>\r\n      <p className=\"volume-of-day\">${volume}</p>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default CryptoItem\r\n","export const getCoinName = (name: string, price : number)  => ({\r\n  type: 'GET_COIN_NAME',\r\n  payload: {\r\n    name,\r\n    price,\r\n  }\r\n})\r\n\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/tableLogo.70e311b3.svg\";","import axios from 'axios'\r\nimport { Tcoin } from '../../types'\r\n\r\nexport const fetchCoins = () => (dispatch: any) => {\r\n  axios\r\n    .get('https://min-api.cryptocompare.com/data/top/totalvolfull?limit=10&tsym=USD')\r\n    .then(({data}) => {\r\n      const coins :Tcoin[] = data.Data.map((coin: any) => {\r\n        const obj :Tcoin = {\r\n          name: coin.CoinInfo.Name,\r\n          fullName: coin.CoinInfo.FullName,\r\n          imageUrl: `https://www.cryptocompare.com/${coin.CoinInfo.ImageUrl}`,\r\n          price: coin.RAW.USD.PRICE.toFixed(3),\r\n          volume: parseInt(coin.RAW.USD.VOLUME24HOUR)\r\n        }\r\n        return obj;\r\n      })\r\n      dispatch(setCoins(coins))\r\n    })\r\n}\r\n\r\nexport const setCoins = (items: Tcoin[]) => ({\r\n  type: 'SET_COINS',\r\n  payload: items\r\n})","import React from 'react'\r\nimport CryptoItem from './CryptoItem';\r\nimport tableLogo from '../../tableLogo.svg';\r\nimport { Tcoin } from '../../types'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchCoins } from '../../redux/actions/coinAction';\r\n\r\nconst CryptoTable  = () => {\r\n  const dispatch = useDispatch()\r\n  const items : Tcoin[] = useSelector(({ coinReducer }:any) => coinReducer.items)\r\n  \r\n  React.useEffect(() => {\r\n    dispatch(fetchCoins())\r\n    setInterval(() => {\r\n      dispatch(fetchCoins())\r\n    },30 *1000);\r\n    \r\n  },[])\r\n\r\n  return (\r\n    <section className=\"crypto-table\">\r\n          <div className=\"crypto-table__block\">\r\n            <div className=\"field-names\">\r\n              <img src={tableLogo} alt=\"logo\"/>\r\n              <p>Name</p>\r\n              <p>FullName</p>\r\n              <p>Price</p>\r\n              <p>Volume24H</p>\r\n            </div>\r\n            <ul>\r\n              {!items.length\r\n                ? 'загрузка'\r\n                : items.map((coin: Tcoin) => {\r\n                  return <CryptoItem  key={coin.name} {...coin} />\r\n                })\r\n              }\r\n            </ul>\r\n          </div>\r\n        </section>\r\n  )\r\n}\r\n\r\nexport default CryptoTable\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Tcoin } from '../../types'\r\n\r\nconst ConverterBlock = (props:any) => {\r\n\r\n  const [value,setValue] = React.useState<string>('')\r\n  const [outval,setOutVal] = React.useState<number>(0)\r\n  const [converterValue,setConverterValue] = React.useState<any>(0)\r\n  \r\n  React.useEffect(() => {\r\n    +value > 0? setOutVal(calculate(+value,+converterValue)) : setOutVal(0)\r\n  },[value,converterValue,props.name])\r\n  \r\n  const onSelectedValue = (e:React.ChangeEvent<HTMLSelectElement>) => {\r\n    setConverterValue(e.target.value)\r\n  }\r\n\r\n  //функция конвертирования суммы\r\n  const calculate = (val1:number,val2:number) => {\r\n    return val1 * props.price / val2\r\n  }\r\n\r\n  const onUpdateField = (e: any) => {\r\n    let validValue = /\\W*$/.test(e.target.value)\r\n    if(validValue){\r\n      setValue(e.target.value)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className=\"crypto-converter\">\r\n      <div className=\"crypto-converter__block\">\r\n        <div className=\"converter__item\">\r\n          <input placeholder=\"Сумма\" value={value} onChange={onUpdateField} className=\"converter__input\" type=\"text\"/>\r\n          <input  readOnly className=\"converter__currency\"  value={props.name} placeholder=\"pick curr\"  name=\"converter__currency\" />  \r\n        </div>\r\n        <div className=\"converter__item\">\r\n          <input readOnly placeholder=\"Сумма\" value={outval.toFixed(3)} className=\"converter__input\" type=\"text\"/>\r\n          <select value={converterValue} onChange={onSelectedValue} className=\"converter__select\" name=\"converter__select\">\r\n            {outval ==  0 ? <option>pick curr</option> : 0}\r\n            {props.items.map((item: Tcoin) => <option key={item.name}  value={item.price} >{item.name}</option>)}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state:any) => {\r\n  \r\n  return {\r\n    name: state.converterReducer.name,\r\n    price: state.converterReducer.price,\r\n    items: state.coinReducer.items\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(ConverterBlock)\r\n","import React from 'react'\nimport { CryptoTable, ConverterBlock } from './components'\n\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1>Конвертор криптовалют</h1>\n      </header>\n        <CryptoTable />\n        <ConverterBlock/>\n\n    </div>\n  );\n}\n\nexport default App;\n","import { Tstate, TCoinDiff, Tcoin } from '../../types'\r\nconst initialState: Tstate = {\r\n  items: [],\r\n  diffObj: {}\r\n}\r\n\r\n\r\nconst coins = (state = initialState, action:any) => {\r\n  switch(action.type) {\r\n    case 'SET_COINS': {\r\n      state.diffObj = diffCurrencies( state.items, action.payload ).reduce(\r\n        (initObj: TCoinDiff, obj: Tcoin) => {\r\n          const newObj: Tcoin = action.payload.find((o: any) => o.name === obj.name)!\r\n          const oldObj: Tcoin = state.items.find(itemObj => itemObj.name === newObj.name)!\r\n          const color: string =\r\n            newObj.price === oldObj.price ? '' : newObj.price > oldObj.price ? 'Up' : 'Down';\r\n          initObj[newObj.name] = color;\r\n          console.log(initObj)\r\n          return initObj;\r\n        },\r\n        {},\r\n      );\r\n      return {\r\n        ...state,\r\n        items: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nfunction diffCurrencies(arr1: Tcoin[], arr2: Tcoin[]) {\r\n  return arr1.filter((obj, index) => {\r\n    if (obj.price !== arr2[index].price) {\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n}\r\nexport default coins;","import { TSelectedCoin } from \"../../types\"\r\n\r\nconst initialState : TSelectedCoin = {\r\n    name: '',\r\n    price: 0,\r\n}\r\n\r\nconst coinName = (state = initialState, action : any) => {\r\n  switch(action.type) {\r\n    case 'GET_COIN_NAME':\r\n      return {\r\n        ...state,\r\n        name: action.payload.name,\r\n        price: action.payload.price,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default coinName;","let initialState = {\r\n  value1: '',\r\n  value2: '',\r\n  inPrice: 0,\r\n  outPrice: 0\r\n}\r\n\r\nconst calculate = (state = initialState,action:any) => {\r\n  switch(action.type) {\r\n    case 'SET_VALUE' :\r\n      return {\r\n        ...state,\r\n        [action.payload.name] : action.payload.value,\r\n        value2:  String((Number(action.payload.value) * state.inPrice) / state.outPrice)\r\n      }\r\n      \r\n    case 'SET_PRICES':\r\n      return {\r\n        ...state,\r\n        inPrice: action.payload.in,\r\n        outPrice: action.payload.out,\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default calculate;\r\n\r\n","import { combineReducers } from 'redux';\r\nimport coinReducer from './coinReducer';\r\nimport converterReducer from './converterReducer';\r\nimport calculateReducer from './calculateReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  coinReducer,\r\n  converterReducer,\r\n  calculateReducer\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux'\r\nimport rootReducer from './reducers'\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n  );\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n  </Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}